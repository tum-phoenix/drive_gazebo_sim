<?xml version="1.0"?>

<robot name="rrbot" xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:macro name="steering" params="suffix x_offset wheel_offset y_offset car_base_height:=^ axle_offset_z=^ wheel_radius=^ wheel_mass=^">
<joint name="steer_${suffix}" type="continuous">
  <parent link="car_chassis_link"/>
  <child link="motor_${suffix}_link"/>
  <origin xyz="${x_offset} ${y_offset} ${car_base_height + axle_offset_z}" rpy="0 0 0"/>
  <axis xyz="0 1 0"/>
  <dynamics damping="0.7"/>
</joint>

<link name="motor_${suffix}_link">
  <collision>
    <origin xyz="0 ${wheel_offset} 0" rpy="${PI/2} 0 0"/>
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
  </collision>

  <visual>
    <origin xyz="0 ${wheel_offset} 0" rpy="${PI/2} 0 0"/>
    <geometry>
      <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
    </geometry>
    <material name="orange"/>
  </visual>

  <inertial>
    <origin xyz="0 ${wheel_offset} 0" rpy="${PI/2} 0 0"/>
    <mass value="${wheel_mass}"/>
    <inertia
        ixx="1.0" ixy="0.0" ixz="0.0"
        iyy="1.0" iyz="0.0"
        izz="1.0"/>
  </inertial>
</link>
</xacro:macro>

  <!-- Constants for robot dimensions -->
  <xacro:property name="PI" value="3.1415926535897931"/>
  <!-- base plate of the car -->
  <xacro:property name="car_base_width" value="0.3" />
  <xacro:property name="car_base_length" value="0.42" />
  <xacro:property name="car_base_height" value="0.003" />
  <xacro:property name="car_base_mass" value="0.2" />
  <!-- steering -->
  <xacro:property name="axle_offset_x" value="0.1" />
  <xacro:property name="axle_offset_z" value="0.02" />
  <!-- wheels -->
  <xacro:property name="wheel_width" value="0.02" />
  <xacro:property name="wheel_radius" value="0.07" />
  <xacro:property name="wheel_mass" value="0.1" />

  <!-- Import all Gazebo-customization elements, including Gazebo colors -->
<!--  <xacro:include filename="$(find rrbot_description)/urdf/rrbot.gazebo" />-->
  <!-- Import Rviz colors -->
<!--  <xacro:include filename="$(find rrbot_description)/urdf/materials.xacro" />-->

  <!-- Used for fixing robot to Gazebo 'base_link' -->
<!--  <link name="world"/>

  <joint name="fixed" type="fixed">
    <origin xyz="0 0 ${wheel_radius}" rpy="0 0 0"/>
    <parent link="world"/>
    <child link="car_chassis_link"/>
  </joint>-->

  <!-- Base Link -->
  <link name="car_chassis_link">
    <collision>
      <origin xyz="0 0 ${car_base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${car_base_length} ${car_base_width} ${car_base_height}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${car_base_height/2}" rpy="0 0 0"/>
      <geometry>
        <box size="${car_base_length} ${car_base_width} ${car_base_height}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${car_base_height/2}" rpy="0 0 0"/>
      <mass value="${car_base_mass}"/>
      <inertia
          ixx="${car_base_mass / 12.0 * (car_base_width*car_base_width + car_base_height*car_base_height)}" ixy="0.0" ixz="0.0"
          iyy="${car_base_mass / 12.0 * (car_base_height*car_base_height + car_base_width*car_base_width)}" iyz="0.0"
          izz="${car_base_mass / 12.0 * (car_base_width*car_base_width + car_base_width*car_base_width)}"/>
    </inertial>
  </link>

  <xacro:steering suffix="front_left" x_offset="${axle_offset_x}" y_offset="${car_base_width/2+0.001}" wheel_offset="${wheel_width}"/>
  <xacro:steering suffix="front_right" x_offset="${axle_offset_x}" y_offset="${-1*car_base_width/2-0.001}" wheel_offset="${-1*wheel_width}"/>
  <xacro:steering suffix="back_left" x_offset="${-axle_offset_x}" y_offset="${car_base_width/2+0.001}"  wheel_offset="${wheel_width}"/>
  <xacro:steering suffix="back_right" x_offset="${-axle_offset_x}" y_offset="${-car_base_width/2-0.001}"  wheel_offset="${-1*wheel_width}"/>



<!--
  <joint name="joint1" type="continuous">
    <parent link="link1"/>
    <child link="link2"/>
    <origin xyz="0 ${width} ${height1 - axel_offset}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>

   Middle Link
  <link name="link2">
    <collision>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
        <box size="${width} ${width} ${height2}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
        <box size="${width} ${width} ${height2}"/>
      </geometry>
      <material name="black"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height2/2 - axel_offset}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
          ixx="${mass / 12.0 * (width*width + height2*height2)}" ixy="0.0" ixz="0.0"
          iyy="${mass / 12.0 * (height2*height2 + width*width)}" iyz="0.0"
          izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="joint2" type="continuous">
    <parent link="link2"/>
    <child link="link3"/>
    <origin xyz="0 ${width} ${height2 - axel_offset*2}" rpy="0 0 0"/>
    <axis xyz="0 1 0"/>
    <dynamics damping="0.7"/>
  </joint>

 Top Link
  <link name="link3">
    <collision>
      <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
        <box size="${width} ${width} ${height3}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
      <geometry>
        <box size="${width} ${width} ${height3}"/>
      </geometry>
      <material name="orange"/>
    </visual>

    <inertial>
      <origin xyz="0 0 ${height3/2 - axel_offset}" rpy="0 0 0"/>
      <mass value="${mass}"/>
      <inertia
          ixx="${mass / 12.0 * (width*width + height3*height3)}" ixy="0.0" ixz="0.0"
          iyy="${mass / 12.0 * (height3*height3 + width*width)}" iyz="0.0"
          izz="${mass / 12.0 * (width*width + width*width)}"/>
    </inertial>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 ${height3 - axel_offset/2}" rpy="0 0 0"/>
    <parent link="link3"/>
    <child link="hokuyo_link"/>
  </joint>

  Hokuyo Laser
  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rrbot_description/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${camera_link} 0 ${height3 - axel_offset*2}" rpy="0 0 0"/>
    <parent link="link3"/>
    <child link="camera_link"/>
  </joint>

  Camera
  <link name="camera_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

   generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
      so that ros and opencv can operate on the camera frame correctly
  <joint name="camera_optical_joint" type="fixed">
     these values have to be these values otherwise the gazebo camera image
        won't be aligned properly with the frame it is supposedly originating from
    <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
  </link>

  <transmission name="tran1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor1">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="tran2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="joint2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
    </joint>
    <actuator name="motor2">
      <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>-->

</robot>
